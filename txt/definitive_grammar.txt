Program SETA Main_func
Main_func SETA int identifier ( ) Compound_statement
Compound_statement SETA { } | { Block_item_list }
Block_item_list SETA Block_item | Block_item_list Block_item
Block_item SETA Declaration | Statement
Declaration SETA Declaration_specifiers ; | Declaration_specifiers Init_declarator_list ;
Declaration_specifiers SETA Type_specifier Declaration_specifiers | Type_specifier
Type_specifier SETA int | float
Init_declarator_list SETA Init_declarator | Init_declarator_list , Init_declarator
Init_declarator SETA identifier = Assignment_expression | identifier
Assignment_expression SETA Logical_or_expression Assignment_operator Assignment_expression | Logical_or_expression
Logical_or_expression SETA Logical_or_expression ii Logical_and_expression | Logical_and_expression
Logical_and_expression SETA Logical_and_expression && Equality_expression | Equality_expression
Equality_expression SETA Equality_expression == Relational_expression | Equality_expression != Relational_expression | Relational_expression
Relational_expression SETA Relational_expression Relational_operator Additive_expression | Additive_expression
Relational_operator SETA > | < | >= | <=
Additive_expression SETA Additive_expression + Multiplicative_expression | Additive_expression - Multiplicative_expression | Multiplicative_expression
Multiplicative_expression SETA Multiplicative_expression * Unary_expression | Multiplicative_expression / Unary_expression | Multiplicative_expression % Unary_expression | Unary_expression
Unary_expression SETA ++ Unary_expression | -- Unary_expression | Unary_operator Unary_expression | Postfix_expression
Unary_operator SETA + | - | !
Postfix_expression SETA Postfix_expression ++ | Postfix_expression -- | Primary_expression
Primary_expression SETA identifier | Constant | (Expression)
Constant SETA int_constant | float_constant
Assignment_operator SETA = | *= | /= | %= | += | -=
Statement SETA Compound_statement | Expression_statement | If_statement | Iteration_statement | Jump_statement
Expression_statement SETA ; | Expression ;
Expression SETA  Expression , Assignment_expression | Assignment_expression
If_statement SETA if ( Expression ) Statement else Statement | if ( Expression ) Statement
Iteration_statement SETA While_statement | Do_while_statement | For_statement
While_statement SETA while ( Expression ) Statement
Do_while_statement SETA do Statement while ( Expression ) ;
For_statement SETA for ( Expression_statement Expression_statement ) Statement | for ( Expression_statement Expression_statement Expression ) Statement | for ( Declaration Expression_statement ) Statement | for ( Declaration Expression_statement Expression ) Statement
Jump_statement SETA continue ; | break ; 