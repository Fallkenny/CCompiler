1,0-1,3	 INT 	 int 
1,4-1,8	 IDENTIFIER 	 main 
1,8-1,9	 OPEN_PARENTHESIS 	 ( 
1,9-1,10	 CLOSE_PARENTHESIS 	 ) 
2,0-2,1	 OPEN_BRACE 	 { 
3,1-3,4	 INT 	 int 
3,5-3,6	 IDENTIFIER 	 a 
3,7-3,8	 ASSIGNENT 	 = 
3,9-3,10	 INTEGER_CONSTANT 	 2 
3,10-3,11	 SEMICOLON 	 ; 
4,4-4,7	 INT 	 int 
4,8-4,9	 IDENTIFIER 	 b 
4,10-4,11	 ASSIGNENT 	 = 
4,12-4,13	 INTEGER_CONSTANT 	 3 
4,13-4,14	 SEMICOLON 	 ; 
5,4-5,7	 INT 	 int 
5,8-5,9	 IDENTIFIER 	 c 
5,10-5,11	 ASSIGNENT 	 = 
5,12-5,13	 IDENTIFIER 	 a 
5,13-5,14	 SEMICOLON 	 ; 
6,4-6,9	 FLOAT 	 float 
6,10-6,15	 IDENTIFIER 	 devil 
6,16-6,17	 ASSIGNENT 	 = 
6,18-6,22	 FLOATING_POINT_CONSTANT 	 6.66 
6,22-6,23	 SEMICOLON 	 ; 
7,4-7,6	 IF 	 if 
7,6-7,7	 OPEN_PARENTHESIS 	 ( 
7,7-7,12	 IDENTIFIER 	 devil 
7,13-7,14	 GREATER 	 > 
7,15-7,16	 IDENTIFIER 	 a 
7,16-7,17	 PLUS 	 + 
7,17-7,18	 IDENTIFIER 	 b 
7,18-7,19	 PLUS 	 + 
7,19-7,20	 IDENTIFIER 	 c 
7,20-7,21	 CLOSE_PARENTHESIS 	 ) 
8,4-8,5	 OPEN_BRACE 	 { 
9,8-9,9	 IDENTIFIER 	 a 
9,9-9,10	 ASSIGNENT 	 = 
9,11-9,12	 INTEGER_CONSTANT 	 6 
9,12-9,13	 PRODUCT 	 * 
9,13-9,16	 INTEGER_CONSTANT 	 100 
9,16-9,17	 SEMICOLON 	 ; 
10,8-10,9	 IDENTIFIER 	 b 
10,10-10,11	 ASSIGNENT 	 = 
10,12-10,13	 INTEGER_CONSTANT 	 6 
10,13-10,14	 PRODUCT 	 * 
10,14-10,16	 INTEGER_CONSTANT 	 10 
10,16-10,17	 SEMICOLON 	 ; 
11,8-11,9	 IDENTIFIER 	 c 
11,10-11,11	 ASSIGNENT 	 = 
11,12-11,13	 INTEGER_CONSTANT 	 6 
11,13-11,14	 PRODUCT 	 * 
11,14-11,15	 INTEGER_CONSTANT 	 1 
11,15-11,16	 SEMICOLON 	 ; 
12,4-12,5	 CLOSE_BRACE 	 } 
13,4-13,6	 IF 	 if 
13,7-13,8	 OPEN_PARENTHESIS 	 ( 
13,8-13,9	 IDENTIFIER 	 a 
13,9-13,10	 GREATER 	 > 
13,10-13,11	 IDENTIFIER 	 b 
13,11-13,12	 CLOSE_PARENTHESIS 	 ) 
14,4-14,5	 OPEN_BRACE 	 { 
15,8-15,9	 IDENTIFIER 	 c 
15,10-15,11	 ASSIGNENT 	 = 
15,12-15,13	 IDENTIFIER 	 b 
15,13-15,14	 SEMICOLON 	 ; 
16,4-16,5	 CLOSE_BRACE 	 } 
17,4-17,8	 ELSE 	 else 
17,9-17,11	 IF 	 if 
17,11-17,12	 OPEN_PARENTHESIS 	 ( 
17,12-17,13	 IDENTIFIER 	 b 
17,13-17,15	 GREATER_OR_EQUAL 	 >= 
17,15-17,16	 IDENTIFIER 	 a 
17,16-17,17	 CLOSE_PARENTHESIS 	 ) 
18,4-18,5	 OPEN_BRACE 	 { 
19,8-19,9	 IDENTIFIER 	 a 
19,10-19,11	 ASSIGNENT 	 = 
19,12-19,13	 IDENTIFIER 	 c 
19,13-19,15	 INCREMENT 	 ++ 
19,15-19,16	 SEMICOLON 	 ; 
20,8-20,9	 IDENTIFIER 	 b 
20,10-20,11	 ASSIGNENT 	 = 
20,12-20,14	 INCREMENT 	 ++ 
20,14-20,15	 IDENTIFIER 	 c 
20,15-20,16	 SEMICOLON 	 ; 
21,4-21,5	 CLOSE_BRACE 	 } 
23,4-23,9	 WHILE 	 while 
23,9-23,10	 OPEN_PARENTHESIS 	 ( 
23,10-23,15	 IDENTIFIER 	 devil 
23,16-23,18	 NOT_EQUALS 	 != 
23,19-23,20	 IDENTIFIER 	 a 
23,20-23,21	 PLUS 	 + 
23,21-23,22	 IDENTIFIER 	 b 
23,22-23,23	 PLUS 	 + 
23,23-23,24	 IDENTIFIER 	 c 
23,24-23,25	 CLOSE_PARENTHESIS 	 ) 
24,4-24,5	 OPEN_BRACE 	 { 
25,8-25,13	 IDENTIFIER 	 devil 
25,13-25,15	 PRODUCT_ASSIGNMENT 	 *= 
25,15-25,17	 INTEGER_CONSTANT 	 10 
25,17-25,18	 SEMICOLON 	 ; 
26,4-26,5	 CLOSE_BRACE 	 } 
28,4-28,7	 INT 	 int 
28,8-28,9	 IDENTIFIER 	 i 
28,9-28,10	 SEMICOLON 	 ; 
29,4-29,7	 INT 	 int 
29,8-29,20	 IDENTIFIER 	 anotherDevil 
29,21-29,22	 ASSIGNENT 	 = 
29,22-29,23	 INTEGER_CONSTANT 	 1 
29,23-29,24	 SEMICOLON 	 ; 
30,4-30,7	 FOR 	 for 
30,7-30,8	 OPEN_PARENTHESIS 	 ( 
30,8-30,9	 IDENTIFIER 	 i 
30,10-30,11	 ASSIGNENT 	 = 
30,11-30,12	 INTEGER_CONSTANT 	 0 
30,12-30,13	 SEMICOLON 	 ; 
30,14-30,15	 IDENTIFIER 	 i 
30,15-30,17	 LESS_OR_EQUAL 	 <= 
30,17-30,18	 INTEGER_CONSTANT 	 2 
30,18-30,19	 SEMICOLON 	 ; 
30,19-30,20	 IDENTIFIER 	 i 
30,20-30,22	 INCREMENT 	 ++ 
30,22-30,23	 CLOSE_PARENTHESIS 	 ) 
31,4-31,5	 OPEN_BRACE 	 { 
32,8-32,20	 IDENTIFIER 	 anotherDevil 
32,21-32,22	 ASSIGNENT 	 = 
32,22-32,23	 INTEGER_CONSTANT 	 1 
32,23-32,24	 SEMICOLON 	 ; 
33,8-33,10	 DO 	 do 
34,8-34,9	 OPEN_BRACE 	 { 
35,12-35,24	 IDENTIFIER 	 anotherDevil 
35,24-35,26	 INCREMENT 	 ++ 
35,26-35,27	 SEMICOLON 	 ; 
36,8-36,9	 CLOSE_BRACE 	 } 
37,8-37,13	 WHILE 	 while 
37,13-37,14	 OPEN_PARENTHESIS 	 ( 
37,14-37,26	 IDENTIFIER 	 anotherDevil 
37,26-37,27	 LESS 	 < 
37,27-37,28	 INTEGER_CONSTANT 	 6 
37,28-37,29	 CLOSE_PARENTHESIS 	 ) 
37,29-37,30	 SEMICOLON 	 ; 
38,8-38,11	 INT 	 int 
38,12-38,26	 IDENTIFIER 	 hellMultiplier 
38,27-38,28	 ASSIGNENT 	 = 
38,29-38,30	 IDENTIFIER 	 i 
38,30-38,31	 SEMICOLON 	 ; 
39,8-39,13	 WHILE 	 while 
39,13-39,14	 OPEN_PARENTHESIS 	 ( 
39,14-39,28	 IDENTIFIER 	 hellMultiplier 
39,28-39,30	 DECREMENT 	 -- 
39,30-39,31	 CLOSE_PARENTHESIS 	 ) 
40,8-40,9	 OPEN_BRACE 	 { 
41,12-41,24	 IDENTIFIER 	 anotherDevil 
41,24-41,25	 ASSIGNENT 	 = 
41,26-41,38	 IDENTIFIER 	 anotherDevil 
41,38-41,39	 PRODUCT 	 * 
41,39-41,41	 INTEGER_CONSTANT 	 10 
41,41-41,42	 SEMICOLON 	 ; 
42,8-42,9	 CLOSE_BRACE 	 } 
43,4-43,5	 CLOSE_BRACE 	 } 
45,4-45,9	 WHILE 	 while 
45,10-45,11	 OPEN_PARENTHESIS 	 ( 
45,11-45,23	 IDENTIFIER 	 anotherDevil 
45,24-45,26	 NOT_EQUALS 	 != 
45,26-45,27	 INTEGER_CONSTANT 	 0 
45,28-45,30	 LOGICAL_OR 	 || 
45,31-45,36	 IDENTIFIER 	 devil 
45,37-45,39	 NOT_EQUALS 	 != 
45,39-45,40	 INTEGER_CONSTANT 	 0 
45,40-45,41	 CLOSE_PARENTHESIS 	 ) 
46,4-46,5	 OPEN_BRACE 	 { 
47,8-47,10	 IF 	 if 
47,10-47,11	 OPEN_PARENTHESIS 	 ( 
47,11-47,23	 IDENTIFIER 	 anotherDevil 
47,24-47,26	 NOT_EQUALS 	 != 
47,27-47,28	 INTEGER_CONSTANT 	 0 
47,28-47,29	 CLOSE_PARENTHESIS 	 ) 
48,8-48,9	 OPEN_BRACE 	 { 
49,10-49,22	 IDENTIFIER 	 anotherDevil 
49,22-49,24	 DECREMENT 	 -- 
49,24-49,25	 SEMICOLON 	 ; 
50,10-50,18	 CONTINUE 	 continue 
50,18-50,19	 SEMICOLON 	 ; 
51,8-51,9	 CLOSE_BRACE 	 } 
53,8-53,10	 IF 	 if 
53,10-53,11	 OPEN_PARENTHESIS 	 ( 
53,11-53,16	 IDENTIFIER 	 devil 
53,17-53,19	 NOT_EQUALS 	 != 
53,20-53,21	 INTEGER_CONSTANT 	 0 
53,21-53,22	 CLOSE_PARENTHESIS 	 ) 
54,8-54,9	 OPEN_BRACE 	 { 
55,10-55,15	 IDENTIFIER 	 devil 
55,15-55,17	 DECREMENT 	 -- 
55,17-55,18	 SEMICOLON 	 ; 
56,10-56,18	 CONTINUE 	 continue 
56,18-56,19	 SEMICOLON 	 ; 
57,8-57,9	 CLOSE_BRACE 	 } 
58,4-58,5	 CLOSE_BRACE 	 } 
59,4-59,7	 INT 	 int 
59,8-59,26	 IDENTIFIER 	 theEvilWasDefeated 
59,27-59,28	 ASSIGNENT 	 = 
59,29-59,30	 INTEGER_CONSTANT 	 0 
59,30-59,31	 SEMICOLON 	 ; 
61,4-61,6	 IF 	 if 
61,6-61,7	 OPEN_PARENTHESIS 	 ( 
61,7-61,19	 IDENTIFIER 	 anotherDevil 
61,19-61,20	 PLUS 	 + 
61,20-61,25	 IDENTIFIER 	 devil 
61,26-61,28	 EQUALS 	 == 
61,29-61,30	 INTEGER_CONSTANT 	 0 
61,30-61,31	 CLOSE_PARENTHESIS 	 ) 
62,4-62,5	 OPEN_BRACE 	 { 
63,8-63,26	 IDENTIFIER 	 theEvilWasDefeated 
63,27-63,28	 ASSIGNENT 	 = 
63,28-63,29	 INTEGER_CONSTANT 	 1 
63,29-63,30	 SEMICOLON 	 ; 
64,4-64,5	 CLOSE_BRACE 	 } 
65,4-65,9	 WHILE 	 while 
65,10-65,11	 OPEN_PARENTHESIS 	 ( 
65,11-65,29	 IDENTIFIER 	 theEvilWasDefeated 
65,29-65,30	 CLOSE_PARENTHESIS 	 ) 
66,4-66,5	 OPEN_BRACE 	 { 
67,8-67,13	 BREAK 	 break 
67,13-67,14	 SEMICOLON 	 ; 
68,4-68,5	 CLOSE_BRACE 	 } 
72,0-72,1	 CLOSE_BRACE 	 } 
